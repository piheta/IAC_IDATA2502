---
- hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - maven
        - npm
        - daemon
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: adding ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: ubuntu
        group: ubuntu
    - name: Clone project repository
      git:
        repo: https://github.com/tama3ti/Nettverk_humidity.git
        dest: /home/ubuntu/repos/
        clone: yes
        update: no
    - name: Replace string to include password in humidityServer.java
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/src/main/java/no/ntnu/Plants/humidityReciever/HumidityServer.java
        regexp: 'var_keystore_passwd'
        replace: '{{ KEYSTOREPASSWD }}'
    - name: Replace db url in src application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/src/main/resources/application.properties
        regexp: 'var_dburl'
        replace: '{{ DBURL }}'
    - name: Replace db username in src application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/src/main/resources/application.properties
        regexp: 'var_dbusr'
        replace: '{{ DBUSR }}'
    - name: Replace db password in src application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/src/main/resources/application.properties
        regexp: 'var_dbpasswd'
        replace: '{{ DBPASSWD }}'
    - name: Replace db url in target application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/target/classes/application.properties
        regexp: 'var_dburl'
        replace: '{{ DBURL }}'
    - name: Replace db username in target application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/target/classes/application.properties
        regexp: 'var_dbusr'
        replace: '{{ DBUSR }}'
    - name: Replace db password in target application.properties
      replace:
        path: /home/ubuntu/repos/react-java-mysql/backend/target/classes/application.properties
        regexp: 'var_dbpasswd'
        replace: '{{ DBPASSWD }}'
    - name: Replace db password in db/password.txt
      replace:
        path: /home/ubuntu/repos/react-java-mysql/db/password.txt
        regexp: 'var_dbpasswd'
        replace: '{{ DBPASSWD }}'
    - name: Build backend jar with mvn clean install
      become: True
      shell:
        cmd: "mvn clean install"
        chdir: /home/ubuntu/repos/react-java-mysql/backend/
    - name: Run docker-compose for all containers
      become: True
      shell:
        cmd: "docker-compose -f compose.yaml -p humid up -d"
        chdir: /home/ubuntu/repos/react-java-mysql/
